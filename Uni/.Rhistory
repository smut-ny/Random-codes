exists("voclist["a"]")
exists("voclist['a']")
vocList["a"]
vocList["a"] == TRUE
which(itatext == "A")
which(itatext == "a")
which(itatext = "a")
itatext
which(i)
which(itatext = a)
which(itatext = "a")
which(itatext == "a")
which(itatext == "b")
kabinka
which(kabinka == "pravak")
length("a")
length(which(kabinka == "pravak"))
length(which(itatext == "a"))
length(which(itatext == "v"))
str_count(itatext, "a")
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
append(vocList[["a"]], (str_count(textSampled, "a"))
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
append(vocList[["a"]], str_count(textSampled, "a"))
}
vocList
vocList["a"]
vocList["a"]
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], str_count(textSampled, "a"))
}
vocList[["a"]]
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
vocList[["a"]]
View(vocList)
View(vocList)
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
vocList[["a"]]
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
progress_bar <- 0
for (i in 1:1000){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Appending characters
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
vocList[["b"]] <- append(vocList[["b"]], sum(str_count(textSampled, "b")))
vocList[["c"]] <- append(vocList[["c"]], sum(str_count(textSampled, "c")))
vocList[["d"]] <- append(vocList[["d"]], sum(str_count(textSampled, "d")))
vocList[["e"]] <- append(vocList[["e"]], sum(str_count(textSampled, "e")))
vocList[["f"]] <- append(vocList[["f"]], sum(str_count(textSampled, "f")))
vocList[["g"]] <- append(vocList[["g"]], sum(str_count(textSampled, "g")))
vocList[["h"]] <- append(vocList[["h"]], sum(str_count(textSampled, "h")))
vocList[["i"]] <- append(vocList[["i"]], sum(str_count(textSampled, "i")))
vocList[["j"]] <- append(vocList[["j"]], sum(str_count(textSampled, "j")))
vocList[["k"]] <- append(vocList[["k"]], sum(str_count(textSampled, "k")))
vocList[["l"]] <- append(vocList[["l"]], sum(str_count(textSampled, "l")))
vocList[["m"]] <- append(vocList[["m"]], sum(str_count(textSampled, "m")))
vocList[["n"]] <- append(vocList[["n"]], sum(str_count(textSampled, "n")))
vocList[["o"]] <- append(vocList[["o"]], sum(str_count(textSampled, "o")))
vocList[["p"]] <- append(vocList[["p"]], sum(str_count(textSampled, "p")))
vocList[["q"]] <- append(vocList[["q"]], sum(str_count(textSampled, "q")))
vocList[["r"]] <- append(vocList[["r"]], sum(str_count(textSampled, "r")))
vocList[["s"]] <- append(vocList[["s"]], sum(str_count(textSampled, "s")))
vocList[["t"]] <- append(vocList[["t"]], sum(str_count(textSampled, "t")))
vocList[["u"]] <- append(vocList[["u"]], sum(str_count(textSampled, "u")))
vocList[["v"]] <- append(vocList[["v"]], sum(str_count(textSampled, "v")))
vocList[["w"]] <- append(vocList[["w"]], sum(str_count(textSampled, "w")))
vocList[["x"]] <- append(vocList[["x"]], sum(str_count(textSampled, "x")))
vocList[["y"]] <- append(vocList[["y"]], sum(str_count(textSampled, "y")))
vocList[["z"]] <- append(vocList[["z"]], sum(str_count(textSampled, "z")))
progress_bar <- progress_bar + i
cat(progress_bar)
}
boxplot(vocList)
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
progress_bar <- 0
for (i in 1:1000){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Appending characters
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
vocList[["b"]] <- append(vocList[["b"]], sum(str_count(textSampled, "b")))
vocList[["c"]] <- append(vocList[["c"]], sum(str_count(textSampled, "c")))
vocList[["d"]] <- append(vocList[["d"]], sum(str_count(textSampled, "d")))
vocList[["e"]] <- append(vocList[["e"]], sum(str_count(textSampled, "e")))
vocList[["f"]] <- append(vocList[["f"]], sum(str_count(textSampled, "f")))
vocList[["g"]] <- append(vocList[["g"]], sum(str_count(textSampled, "g")))
vocList[["h"]] <- append(vocList[["h"]], sum(str_count(textSampled, "h")))
vocList[["i"]] <- append(vocList[["i"]], sum(str_count(textSampled, "i")))
vocList[["j"]] <- append(vocList[["j"]], sum(str_count(textSampled, "j")))
vocList[["k"]] <- append(vocList[["k"]], sum(str_count(textSampled, "k")))
vocList[["l"]] <- append(vocList[["l"]], sum(str_count(textSampled, "l")))
vocList[["m"]] <- append(vocList[["m"]], sum(str_count(textSampled, "m")))
vocList[["n"]] <- append(vocList[["n"]], sum(str_count(textSampled, "n")))
vocList[["o"]] <- append(vocList[["o"]], sum(str_count(textSampled, "o")))
vocList[["p"]] <- append(vocList[["p"]], sum(str_count(textSampled, "p")))
vocList[["q"]] <- append(vocList[["q"]], sum(str_count(textSampled, "q")))
vocList[["r"]] <- append(vocList[["r"]], sum(str_count(textSampled, "r")))
vocList[["s"]] <- append(vocList[["s"]], sum(str_count(textSampled, "s")))
vocList[["t"]] <- append(vocList[["t"]], sum(str_count(textSampled, "t")))
vocList[["u"]] <- append(vocList[["u"]], sum(str_count(textSampled, "u")))
vocList[["v"]] <- append(vocList[["v"]], sum(str_count(textSampled, "v")))
vocList[["w"]] <- append(vocList[["w"]], sum(str_count(textSampled, "w")))
vocList[["x"]] <- append(vocList[["x"]], sum(str_count(textSampled, "x")))
vocList[["y"]] <- append(vocList[["y"]], sum(str_count(textSampled, "y")))
vocList[["z"]] <- append(vocList[["z"]], sum(str_count(textSampled, "z")))
progress_bar <- progress_bar + 1
cat(progress_bar)
cat("\n")
}
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
progress_bar <- 0
for (i in 1:1000){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Appending characters
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
vocList[["b"]] <- append(vocList[["b"]], sum(str_count(textSampled, "b")))
vocList[["c"]] <- append(vocList[["c"]], sum(str_count(textSampled, "c")))
vocList[["d"]] <- append(vocList[["d"]], sum(str_count(textSampled, "d")))
vocList[["e"]] <- append(vocList[["e"]], sum(str_count(textSampled, "e")))
vocList[["f"]] <- append(vocList[["f"]], sum(str_count(textSampled, "f")))
vocList[["g"]] <- append(vocList[["g"]], sum(str_count(textSampled, "g")))
vocList[["h"]] <- append(vocList[["h"]], sum(str_count(textSampled, "h")))
vocList[["i"]] <- append(vocList[["i"]], sum(str_count(textSampled, "i")))
vocList[["j"]] <- append(vocList[["j"]], sum(str_count(textSampled, "j")))
vocList[["k"]] <- append(vocList[["k"]], sum(str_count(textSampled, "k")))
vocList[["l"]] <- append(vocList[["l"]], sum(str_count(textSampled, "l")))
vocList[["m"]] <- append(vocList[["m"]], sum(str_count(textSampled, "m")))
vocList[["n"]] <- append(vocList[["n"]], sum(str_count(textSampled, "n")))
vocList[["o"]] <- append(vocList[["o"]], sum(str_count(textSampled, "o")))
vocList[["p"]] <- append(vocList[["p"]], sum(str_count(textSampled, "p")))
vocList[["q"]] <- append(vocList[["q"]], sum(str_count(textSampled, "q")))
vocList[["r"]] <- append(vocList[["r"]], sum(str_count(textSampled, "r")))
vocList[["s"]] <- append(vocList[["s"]], sum(str_count(textSampled, "s")))
vocList[["t"]] <- append(vocList[["t"]], sum(str_count(textSampled, "t")))
vocList[["u"]] <- append(vocList[["u"]], sum(str_count(textSampled, "u")))
vocList[["v"]] <- append(vocList[["v"]], sum(str_count(textSampled, "v")))
vocList[["w"]] <- append(vocList[["w"]], sum(str_count(textSampled, "w")))
vocList[["x"]] <- append(vocList[["x"]], sum(str_count(textSampled, "x")))
vocList[["y"]] <- append(vocList[["y"]], sum(str_count(textSampled, "y")))
vocList[["z"]] <- append(vocList[["z"]], sum(str_count(textSampled, "z")))
progress_bar <- progress_bar + 1
cat(progress_bar)
cat("\n")
}
boxplot(vocList)
