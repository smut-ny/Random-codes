vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Dividing characters from sampled text into table
textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
textCharacters <- table(textCharacters)
#Appending characters into mapped list
vocList[["a"]] <- append(c(textCharacters[["a"]]), vocList[["a"]])
vocList[["b"]] <- append(c(textCharacters[["b"]]), vocList[["b"]])
vocList[["c"]] <- append(c(textCharacters[["c"]]), vocList[["c"]])
vocList[["d"]] <- append(c(textCharacters[["d"]]), vocList[["d"]])
vocList[["e"]] <- append(c(textCharacters[["e"]]), vocList[["e"]])
vocList[["f"]] <- append(c(textCharacters[["f"]]), vocList[["f"]])
vocList[["g"]] <- append(c(textCharacters[["g"]]), vocList[["g"]])
vocList[["h"]] <- append(c(textCharacters[["h"]]), vocList[["h"]])
vocList[["i"]] <- append(c(textCharacters[["i"]]), vocList[["i"]])
vocList[["j"]] <- append(c(textCharacters[["j"]]), vocList[["j"]])
vocList[["k"]] <- append(c(textCharacters[["k"]]), vocList[["k"]])
vocList[["l"]] <- append(c(textCharacters[["l"]]), vocList[["l"]])
vocList[["m"]] <- append(c(textCharacters[["m"]]), vocList[["m"]])
vocList[["n"]] <- append(c(textCharacters[["n"]]), vocList[["n"]])
vocList[["o"]] <- append(c(textCharacters[["o"]]), vocList[["o"]])
vocList[["p"]] <- append(c(textCharacters[["p"]]), vocList[["p"]])
vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])
vocList[["r"]] <- append(c(textCharacters[["r"]]), vocList[["r"]])
vocList[["s"]] <- append(c(textCharacters[["s"]]), vocList[["s"]])
vocList[["t"]] <- append(c(textCharacters[["t"]]), vocList[["t"]])
vocList[["u"]] <- append(c(textCharacters[["u"]]), vocList[["u"]])
vocList[["v"]] <- append(c(textCharacters[["v"]]), vocList[["v"]])
vocList[["w"]] <- append(c(textCharacters[["w"]]), vocList[["w"]])
vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])
vocList[["y"]] <- append(c(textCharacters[["y"]]), vocList[["y"]])
vocList[["z"]] <- append(c(textCharacters[["z"]]), vocList[["z"]])
}
install.packages("stringi")
install.packages("stringr")
voclist
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Dividing characters from sampled text into table
textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
textCharacters <- table(textCharacters)
#Appending characters into mapped list
vocList[["a"]] <- append(c(textCharacters[["a"]]), vocList[["a"]])
vocList[["b"]] <- append(c(textCharacters[["b"]]), vocList[["b"]])
vocList[["c"]] <- append(c(textCharacters[["c"]]), vocList[["c"]])
vocList[["d"]] <- append(c(textCharacters[["d"]]), vocList[["d"]])
vocList[["e"]] <- append(c(textCharacters[["e"]]), vocList[["e"]])
vocList[["f"]] <- append(c(textCharacters[["f"]]), vocList[["f"]])
vocList[["g"]] <- append(c(textCharacters[["g"]]), vocList[["g"]])
vocList[["h"]] <- append(c(textCharacters[["h"]]), vocList[["h"]])
vocList[["i"]] <- append(c(textCharacters[["i"]]), vocList[["i"]])
vocList[["j"]] <- append(c(textCharacters[["j"]]), vocList[["j"]])
vocList[["k"]] <- append(c(textCharacters[["k"]]), vocList[["k"]])
vocList[["l"]] <- append(c(textCharacters[["l"]]), vocList[["l"]])
vocList[["m"]] <- append(c(textCharacters[["m"]]), vocList[["m"]])
vocList[["n"]] <- append(c(textCharacters[["n"]]), vocList[["n"]])
vocList[["o"]] <- append(c(textCharacters[["o"]]), vocList[["o"]])
vocList[["p"]] <- append(c(textCharacters[["p"]]), vocList[["p"]])
vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])
vocList[["r"]] <- append(c(textCharacters[["r"]]), vocList[["r"]])
vocList[["s"]] <- append(c(textCharacters[["s"]]), vocList[["s"]])
vocList[["t"]] <- append(c(textCharacters[["t"]]), vocList[["t"]])
vocList[["u"]] <- append(c(textCharacters[["u"]]), vocList[["u"]])
vocList[["v"]] <- append(c(textCharacters[["v"]]), vocList[["v"]])
vocList[["w"]] <- append(c(textCharacters[["w"]]), vocList[["w"]])
vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])
vocList[["y"]] <- append(c(textCharacters[["y"]]), vocList[["y"]])
vocList[["z"]] <- append(c(textCharacters[["z"]]), vocList[["z"]])
}
voclist
vocList
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
#Dividing characters from sampled text into table
textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
textCharacters <- table(textCharacters)
#Appending characters into mapped list
vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
}
vocList
vocList
vocList[["a"]]
if (vocList[["a"]] == TRUE) {
cat("TRUE")
}
if (exists(vocList[["a"]]) ) {
cat("TRUE")
}
if (exists("vocList[["a"]]") ) {
cat("TRUE")
}
if (exists("vocList[["a"]]") ) {
cat("TRUE")
}
if (exists("vocList[["a"]]") ) {
c("TRUE")at
}
if (exists("vocList[["a"]]") )
exists("vocList")
exists("vocList[["a""]]]")
exists("vocList[["a"]]]")
exists("vocList[["a"]]")
exists("vocList[[a]]")
exists("vocList[['a']]")
exists("vocList[['b']]")
vocList[a]
vocList["a"]
vocList["a"]
exists("voclist["a"]")
exists("voclist['a']")
vocList["a"]
vocList["a"] == TRUE
which(itatext == "A")
which(itatext == "a")
which(itatext = "a")
itatext
which(i)
which(itatext = a)
which(itatext = "a")
which(itatext == "a")
which(itatext == "b")
kabinka
which(kabinka == "pravak")
length("a")
length(which(kabinka == "pravak"))
length(which(itatext == "a"))
length(which(itatext == "v"))
str_count(itatext, "a")
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
append(vocList[["a"]], (str_count(textSampled, "a"))
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
append(vocList[["a"]], str_count(textSampled, "a"))
}
vocList
vocList["a"]
vocList["a"]
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], str_count(textSampled, "a"))
}
vocList[["a"]]
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
vocList[["a"]]
View(vocList)
View(vocList)
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
#Dependencies
install.packages("stringi")
install.packages("stringr")
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")
#Loading and cleaning text file
rawText <- GetFileContent("assets/jazyky/it.txt")
textTokenized <- TokenizeText(rawText)
#Main storage (list) that represents final object
vocList <- list()
#Mapping characters in a list
vocList[["a"]] <- c()
vocList[["b"]] <- c()
vocList[["c"]] <- c()
vocList[["d"]] <- c()
vocList[["e"]] <- c()
vocList[["f"]] <- c()
vocList[["g"]] <- c()
vocList[["h"]] <- c()
vocList[["i"]] <- c()
vocList[["j"]] <- c()
vocList[["k"]] <- c()
vocList[["l"]] <- c()
vocList[["m"]] <- c()
vocList[["n"]] <- c()
vocList[["o"]] <- c()
vocList[["p"]] <- c()
vocList[["q"]] <- c()
vocList[["r"]] <- c()
vocList[["s"]] <- c()
vocList[["t"]] <- c()
vocList[["u"]] <- c()
vocList[["v"]] <- c()
vocList[["w"]] <- c()
vocList[["x"]] <- c()
vocList[["y"]] <- c()
vocList[["z"]] <- c()
#Looping: sample whole text and append characters into a mapped list
for (i in 1:100){
#Sampling tokenized text file
textSampled <- sample(textTokenized, replace=TRUE)
vocList[["a"]] <- append(vocList[["a"]], sum(str_count(textSampled, "a")))
}
#Appenduje to prazdnej list.. to nejde protoze to hleda podle indexu
# #Dividing characters from sampled text into table
# textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)
# textCharacters <- table(textCharacters)
# #Appending characters into mapped list
# vocList[["a"]] <- append(textCharacters[["a"]], vocList[["a"]])
# vocList[["b"]] <- append(textCharacters[["b"]], vocList[["b"]])
# vocList[["c"]] <- append(textCharacters[["c"]], vocList[["c"]])
# vocList[["d"]] <- append(textCharacters[["d"]], vocList[["d"]])
# vocList[["e"]] <- append(textCharacters[["e"]], vocList[["e"]])
# vocList[["f"]] <- append(textCharacters[["f"]], vocList[["f"]])
# vocList[["g"]] <- append(textCharacters[["g"]], vocList[["g"]])
# vocList[["h"]] <- append(textCharacters[["h"]], vocList[["h"]])
# vocList[["i"]] <- append(textCharacters[["i"]], vocList[["i"]])
# vocList[["j"]] <- append(textCharacters[["j"]], vocList[["j"]])
# vocList[["k"]] <- append(textCharacters[["k"]], vocList[["k"]])
# vocList[["l"]] <- append(textCharacters[["l"]], vocList[["l"]])
# vocList[["m"]] <- append(textCharacters[["m"]], vocList[["m"]])
# vocList[["n"]] <- append(textCharacters[["n"]], vocList[["n"]])
# vocList[["o"]] <- append(textCharacters[["o"]], vocList[["o"]])
# vocList[["p"]] <- append(textCharacters[["p"]], vocList[["p"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["r"]] <- append(textCharacters[["r"]], vocList[["r"]])
# vocList[["s"]] <- append(textCharacters[["s"]], vocList[["s"]])
# vocList[["t"]] <- append(textCharacters[["t"]], vocList[["t"]])
# vocList[["u"]] <- append(textCharacters[["u"]], vocList[["u"]])
# vocList[["v"]] <- append(textCharacters[["v"]], vocList[["v"]])
# vocList[["w"]] <- append(textCharacters[["w"]], vocList[["w"]])
# vocList[["q"]] <- append(textCharacters[["q"]], vocList[["q"]])
# vocList[["y"]] <- append(textCharacters[["y"]], vocList[["y"]])
# vocList[["z"]] <- append(textCharacters[["z"]], vocList[["z"]])
vocList[["a"]]
