1+1
x <= a + b
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
x
sample(x)
sample(x, 2)
sample(x, replace = T)
sample(x, 500, replace = T)
sample(x, 5000, replace = T)
sample(x, 500000, replace = T)
x <- c(1,2, 3)
x
x <- c("hovno govno", "hovno")
sample(x)
sample(x, 200, replace = TRUE)
v <- y
v <- sample(x, 200, replace = T)
v
clear()
cls
v
mean(v)
length(v)
char(v)
v[3]
v[2]
v[1]
test <- c(a, b, c, c, d)
test
test - <-
test >-
fds
test <- c(a, b, c, c, d)
c() -> vocList[["a"]]#
c() -> vocList[["b"]]#
c() -> vocList[["c"]]#
c() -> vocList[["d"]]#
c() -> vocList[["e"]]#
c() -> vocList[["f"]]#
c() -> vocList[["g"]]#
c() -> vocList[["h"]]#
c() -> vocList[["i"]]#
c() -> vocList[["j"]]#
c() -> vocList[["k"]]#
c() -> vocList[["l"]]#
c() -> vocList[["m"]]#
c() -> vocList[["n"]]#
c() -> vocList[["o"]]#
c() -> vocList[["p"]]#
c() -> vocList[["q"]]#
c() -> vocList[["r"]]#
c() -> vocList[["s"]]#
c() -> vocList[["t"]]#
c() -> vocList[["u"]]#
c() -> vocList[["v"]]#
c() -> vocList[["w"]]#
c() -> vocList[["x"]]#
c() -> vocList[["y"]]#
c() -> vocList[["z"]]
vocList <- list()#
#
c() -> vocList[["a"]]#
c() -> vocList[["b"]]#
c() -> vocList[["c"]]#
c() -> vocList[["d"]]#
c() -> vocList[["e"]]#
c() -> vocList[["f"]]#
c() -> vocList[["g"]]#
c() -> vocList[["h"]]#
c() -> vocList[["i"]]#
c() -> vocList[["j"]]#
c() -> vocList[["k"]]#
c() -> vocList[["l"]]#
c() -> vocList[["m"]]#
c() -> vocList[["n"]]#
c() -> vocList[["o"]]#
c() -> vocList[["p"]]#
c() -> vocList[["q"]]#
c() -> vocList[["r"]]#
c() -> vocList[["s"]]#
c() -> vocList[["t"]]#
c() -> vocList[["u"]]#
c() -> vocList[["v"]]#
c() -> vocList[["w"]]#
c() -> vocList[["x"]]#
c() -> vocList[["y"]]#
c() -> vocList[["z"]]
vocList
vocList <- list()#
#
c("a", "b") -> vocList[["a"]]#
c() -> vocList[["b"]]#
c() -> vocList[["c"]]#
c() -> vocList[["d"]]#
c() -> vocList[["e"]]#
c() -> vocList[["f"]]#
c() -> vocList[["g"]]#
c() -> vocList[["h"]]#
c() -> vocList[["i"]]#
c() -> vocList[["j"]]#
c() -> vocList[["k"]]#
c() -> vocList[["l"]]#
c() -> vocList[["m"]]#
c() -> vocList[["n"]]#
c() -> vocList[["o"]]#
c() -> vocList[["p"]]#
c() -> vocList[["q"]]#
c("d", "e") -> vocList[["r"]]#
c() -> vocList[["s"]]#
c() -> vocList[["t"]]#
c() -> vocList[["u"]]#
c() -> vocList[["v"]]#
c() -> vocList[["w"]]#
c() -> vocList[["x"]]#
c() -> vocList[["y"]]#
c() -> vocList[["z"]]
vocList
c("d", "e", "f") -> vocList[["r"]]
vocList
liste <- list()
list
liste
getwd()
cd ..
setwd(./documents)
setwd('~/Documents/Coding/_github/Random-codes/Uni/R-Quests.R', chdir = TRUE)
setwd('~/Documents/Coding/_github/Random-codes/Uni/R-Quests.R')
setwd('/Documents/Coding/_github/Random-codes/Uni/')
setwd('./Documents/Coding/_github/Random-codes/Uni/')
getwd()
#Dependencies#
install.packages("stringi")#
install.packages("stringr")#
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")#
#
#Loading and cleaning text file#
rawText <- GetFileContent("assets/jazyky/it.txt")#
textTokenized <- TokenizeText(rawText)#
#
#Main storage (list) that represents final object#
vocList <- list()#
#
#Mapping characters in a list#
vocList[["a"]] <- c()#
vocList[["b"]] <- c()#
vocList[["c"]] <- c()#
vocList[["d"]] <- c()#
vocList[["e"]] <- c()#
vocList[["f"]] <- c()#
vocList[["g"]] <- c()#
vocList[["h"]] <- c()#
vocList[["i"]] <- c()#
vocList[["j"]] <- c()#
vocList[["k"]] <- c()#
vocList[["l"]] <- c()#
vocList[["m"]] <- c()#
vocList[["n"]] <- c()#
vocList[["o"]] <- c()#
vocList[["p"]] <- c()#
vocList[["q"]] <- c()#
vocList[["r"]] <- c()#
vocList[["s"]] <- c()#
vocList[["t"]] <- c()#
vocList[["u"]] <- c()#
vocList[["v"]] <- c()#
vocList[["w"]] <- c()#
vocList[["x"]] <- c()#
vocList[["y"]] <- c()#
vocList[["z"]] <- c()#
#
#Looping: sample whole text and append characters into a mapped list#
#
for (1 in 10){#
    #Sampling tokenized text file#
    textSampled <- sample(textTokenized, Replace = T)#
    #Dividing characters from sampled text into table#
    textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)#
    textCharacters <- table(textCharacters)#
    #Appending characters into mapped list#
    vocList[["a"]] -> append(c(textCharacters[["a"]]), vocList[["a"]])#
    vocList[["b"]] -> append(c(textCharacters[["b"]]), vocList[["b"]])#
    vocList[["c"]] -> append(c(textCharacters[["c"]]), vocList[["c"]])#
    vocList[["d"]] -> append(c(textCharacters[["d"]]), vocList[["d"]])#
    vocList[["e"]] -> append(c(textCharacters[["e"]]), vocList[["e"]])#
    vocList[["f"]] -> append(c(textCharacters[["f"]]), vocList[["f"]])#
    vocList[["g"]] -> append(c(textCharacters[["g"]]), vocList[["g"]])#
    vocList[["h"]] -> append(c(textCharacters[["h"]]), vocList[["h"]])#
    vocList[["i"]] -> append(c(textCharacters[["i"]]), vocList[["i"]])#
    vocList[["j"]] -> append(c(textCharacters[["j"]]), vocList[["j"]])#
    vocList[["k"]] -> append(c(textCharacters[["k"]]), vocList[["k"]])#
    vocList[["l"]] -> append(c(textCharacters[["l"]]), vocList[["l"]])#
    vocList[["m"]] -> append(c(textCharacters[["m"]]), vocList[["m"]])#
    vocList[["n"]] -> append(c(textCharacters[["n"]]), vocList[["n"]])#
    vocList[["o"]] -> append(c(textCharacters[["o"]]), vocList[["o"]])#
    vocList[["p"]] -> append(c(textCharacters[["p"]]), vocList[["p"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["r"]] -> append(c(textCharacters[["r"]]), vocList[["r"]])#
    vocList[["s"]] -> append(c(textCharacters[["s"]]), vocList[["s"]])#
    vocList[["t"]] -> append(c(textCharacters[["t"]]), vocList[["t"]])#
    vocList[["u"]] -> append(c(textCharacters[["u"]]), vocList[["u"]])#
    vocList[["v"]] -> append(c(textCharacters[["v"]]), vocList[["v"]])#
    vocList[["w"]] -> append(c(textCharacters[["w"]]), vocList[["w"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["y"]] -> append(c(textCharacters[["y"]]), vocList[["y"]])#
    vocList[["z"]] -> append(c(textCharacters[["z"]]), vocList[["z"]])#
}
#Dependencies#
install.packages("stringi")#
install.packages("stringr")#
source("https://raw.githubusercontent.com/oltkkol/vmod/master/simplest_text.R")#
#
#Loading and cleaning text file#
rawText <- GetFileContent("assets/jazyky/it.txt")#
textTokenized <- TokenizeText(rawText)#
#
#Main storage (list) that represents final object#
vocList <- list()#
#
#Mapping characters in a list#
vocList[["a"]] <- c()#
vocList[["b"]] <- c()#
vocList[["c"]] <- c()#
vocList[["d"]] <- c()#
vocList[["e"]] <- c()#
vocList[["f"]] <- c()#
vocList[["g"]] <- c()#
vocList[["h"]] <- c()#
vocList[["i"]] <- c()#
vocList[["j"]] <- c()#
vocList[["k"]] <- c()#
vocList[["l"]] <- c()#
vocList[["m"]] <- c()#
vocList[["n"]] <- c()#
vocList[["o"]] <- c()#
vocList[["p"]] <- c()#
vocList[["q"]] <- c()#
vocList[["r"]] <- c()#
vocList[["s"]] <- c()#
vocList[["t"]] <- c()#
vocList[["u"]] <- c()#
vocList[["v"]] <- c()#
vocList[["w"]] <- c()#
vocList[["x"]] <- c()#
vocList[["y"]] <- c()#
vocList[["z"]] <- c()#
#
#Looping: sample whole text and append characters into a mapped list#
#
for (i in 10){#
    #Sampling tokenized text file#
    textSampled <- sample(textTokenized, Replace = T)#
    #Dividing characters from sampled text into table#
    textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)#
    textCharacters <- table(textCharacters)#
    #Appending characters into mapped list#
    vocList[["a"]] -> append(c(textCharacters[["a"]]), vocList[["a"]])#
    vocList[["b"]] -> append(c(textCharacters[["b"]]), vocList[["b"]])#
    vocList[["c"]] -> append(c(textCharacters[["c"]]), vocList[["c"]])#
    vocList[["d"]] -> append(c(textCharacters[["d"]]), vocList[["d"]])#
    vocList[["e"]] -> append(c(textCharacters[["e"]]), vocList[["e"]])#
    vocList[["f"]] -> append(c(textCharacters[["f"]]), vocList[["f"]])#
    vocList[["g"]] -> append(c(textCharacters[["g"]]), vocList[["g"]])#
    vocList[["h"]] -> append(c(textCharacters[["h"]]), vocList[["h"]])#
    vocList[["i"]] -> append(c(textCharacters[["i"]]), vocList[["i"]])#
    vocList[["j"]] -> append(c(textCharacters[["j"]]), vocList[["j"]])#
    vocList[["k"]] -> append(c(textCharacters[["k"]]), vocList[["k"]])#
    vocList[["l"]] -> append(c(textCharacters[["l"]]), vocList[["l"]])#
    vocList[["m"]] -> append(c(textCharacters[["m"]]), vocList[["m"]])#
    vocList[["n"]] -> append(c(textCharacters[["n"]]), vocList[["n"]])#
    vocList[["o"]] -> append(c(textCharacters[["o"]]), vocList[["o"]])#
    vocList[["p"]] -> append(c(textCharacters[["p"]]), vocList[["p"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["r"]] -> append(c(textCharacters[["r"]]), vocList[["r"]])#
    vocList[["s"]] -> append(c(textCharacters[["s"]]), vocList[["s"]])#
    vocList[["t"]] -> append(c(textCharacters[["t"]]), vocList[["t"]])#
    vocList[["u"]] -> append(c(textCharacters[["u"]]), vocList[["u"]])#
    vocList[["v"]] -> append(c(textCharacters[["v"]]), vocList[["v"]])#
    vocList[["w"]] -> append(c(textCharacters[["w"]]), vocList[["w"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["y"]] -> append(c(textCharacters[["y"]]), vocList[["y"]])#
    vocList[["z"]] -> append(c(textCharacters[["z"]]), vocList[["z"]])#
}
#Loading and cleaning text file#
rawText <- GetFileContent("assets/jazyky/it.txt")#
textTokenized <- TokenizeText(rawText)#
#
#Main storage (list) that represents final object#
vocList <- list()#
#
#Mapping characters in a list#
vocList[["a"]] <- c()#
vocList[["b"]] <- c()#
vocList[["c"]] <- c()#
vocList[["d"]] <- c()#
vocList[["e"]] <- c()#
vocList[["f"]] <- c()#
vocList[["g"]] <- c()#
vocList[["h"]] <- c()#
vocList[["i"]] <- c()#
vocList[["j"]] <- c()#
vocList[["k"]] <- c()#
vocList[["l"]] <- c()#
vocList[["m"]] <- c()#
vocList[["n"]] <- c()#
vocList[["o"]] <- c()#
vocList[["p"]] <- c()#
vocList[["q"]] <- c()#
vocList[["r"]] <- c()#
vocList[["s"]] <- c()#
vocList[["t"]] <- c()#
vocList[["u"]] <- c()#
vocList[["v"]] <- c()#
vocList[["w"]] <- c()#
vocList[["x"]] <- c()#
vocList[["y"]] <- c()#
vocList[["z"]] <- c()#
#
#Looping: sample whole text and append characters into a mapped list#
#
for (i in 10){#
    #Sampling tokenized text file#
    textSampled <- sample(textTokenized, Replace=TRUE)#
    #Dividing characters from sampled text into table#
    textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)#
    textCharacters <- table(textCharacters)#
    #Appending characters into mapped list#
    vocList[["a"]] -> append(c(textCharacters[["a"]]), vocList[["a"]])#
    vocList[["b"]] -> append(c(textCharacters[["b"]]), vocList[["b"]])#
    vocList[["c"]] -> append(c(textCharacters[["c"]]), vocList[["c"]])#
    vocList[["d"]] -> append(c(textCharacters[["d"]]), vocList[["d"]])#
    vocList[["e"]] -> append(c(textCharacters[["e"]]), vocList[["e"]])#
    vocList[["f"]] -> append(c(textCharacters[["f"]]), vocList[["f"]])#
    vocList[["g"]] -> append(c(textCharacters[["g"]]), vocList[["g"]])#
    vocList[["h"]] -> append(c(textCharacters[["h"]]), vocList[["h"]])#
    vocList[["i"]] -> append(c(textCharacters[["i"]]), vocList[["i"]])#
    vocList[["j"]] -> append(c(textCharacters[["j"]]), vocList[["j"]])#
    vocList[["k"]] -> append(c(textCharacters[["k"]]), vocList[["k"]])#
    vocList[["l"]] -> append(c(textCharacters[["l"]]), vocList[["l"]])#
    vocList[["m"]] -> append(c(textCharacters[["m"]]), vocList[["m"]])#
    vocList[["n"]] -> append(c(textCharacters[["n"]]), vocList[["n"]])#
    vocList[["o"]] -> append(c(textCharacters[["o"]]), vocList[["o"]])#
    vocList[["p"]] -> append(c(textCharacters[["p"]]), vocList[["p"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["r"]] -> append(c(textCharacters[["r"]]), vocList[["r"]])#
    vocList[["s"]] -> append(c(textCharacters[["s"]]), vocList[["s"]])#
    vocList[["t"]] -> append(c(textCharacters[["t"]]), vocList[["t"]])#
    vocList[["u"]] -> append(c(textCharacters[["u"]]), vocList[["u"]])#
    vocList[["v"]] -> append(c(textCharacters[["v"]]), vocList[["v"]])#
    vocList[["w"]] -> append(c(textCharacters[["w"]]), vocList[["w"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["y"]] -> append(c(textCharacters[["y"]]), vocList[["y"]])#
    vocList[["z"]] -> append(c(textCharacters[["z"]]), vocList[["z"]])#
}
#Loading and cleaning text file#
rawText <- GetFileContent("assets/jazyky/it.txt")#
textTokenized <- TokenizeText(rawText)#
#
#Main storage (list) that represents final object#
vocList <- list()#
#
#Mapping characters in a list#
vocList[["a"]] <- c()#
vocList[["b"]] <- c()#
vocList[["c"]] <- c()#
vocList[["d"]] <- c()#
vocList[["e"]] <- c()#
vocList[["f"]] <- c()#
vocList[["g"]] <- c()#
vocList[["h"]] <- c()#
vocList[["i"]] <- c()#
vocList[["j"]] <- c()#
vocList[["k"]] <- c()#
vocList[["l"]] <- c()#
vocList[["m"]] <- c()#
vocList[["n"]] <- c()#
vocList[["o"]] <- c()#
vocList[["p"]] <- c()#
vocList[["q"]] <- c()#
vocList[["r"]] <- c()#
vocList[["s"]] <- c()#
vocList[["t"]] <- c()#
vocList[["u"]] <- c()#
vocList[["v"]] <- c()#
vocList[["w"]] <- c()#
vocList[["x"]] <- c()#
vocList[["y"]] <- c()#
vocList[["z"]] <- c()#
#
#Looping: sample whole text and append characters into a mapped list#
#
for (i in 10){#
    #Sampling tokenized text file#
    textSampled <- sample(textTokenized, replace=TRUE)#
    #Dividing characters from sampled text into table#
    textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)#
    textCharacters <- table(textCharacters)#
    #Appending characters into mapped list#
    vocList[["a"]] -> append(c(textCharacters[["a"]]), vocList[["a"]])#
    vocList[["b"]] -> append(c(textCharacters[["b"]]), vocList[["b"]])#
    vocList[["c"]] -> append(c(textCharacters[["c"]]), vocList[["c"]])#
    vocList[["d"]] -> append(c(textCharacters[["d"]]), vocList[["d"]])#
    vocList[["e"]] -> append(c(textCharacters[["e"]]), vocList[["e"]])#
    vocList[["f"]] -> append(c(textCharacters[["f"]]), vocList[["f"]])#
    vocList[["g"]] -> append(c(textCharacters[["g"]]), vocList[["g"]])#
    vocList[["h"]] -> append(c(textCharacters[["h"]]), vocList[["h"]])#
    vocList[["i"]] -> append(c(textCharacters[["i"]]), vocList[["i"]])#
    vocList[["j"]] -> append(c(textCharacters[["j"]]), vocList[["j"]])#
    vocList[["k"]] -> append(c(textCharacters[["k"]]), vocList[["k"]])#
    vocList[["l"]] -> append(c(textCharacters[["l"]]), vocList[["l"]])#
    vocList[["m"]] -> append(c(textCharacters[["m"]]), vocList[["m"]])#
    vocList[["n"]] -> append(c(textCharacters[["n"]]), vocList[["n"]])#
    vocList[["o"]] -> append(c(textCharacters[["o"]]), vocList[["o"]])#
    vocList[["p"]] -> append(c(textCharacters[["p"]]), vocList[["p"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["r"]] -> append(c(textCharacters[["r"]]), vocList[["r"]])#
    vocList[["s"]] -> append(c(textCharacters[["s"]]), vocList[["s"]])#
    vocList[["t"]] -> append(c(textCharacters[["t"]]), vocList[["t"]])#
    vocList[["u"]] -> append(c(textCharacters[["u"]]), vocList[["u"]])#
    vocList[["v"]] -> append(c(textCharacters[["v"]]), vocList[["v"]])#
    vocList[["w"]] -> append(c(textCharacters[["w"]]), vocList[["w"]])#
    vocList[["q"]] -> append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["y"]] -> append(c(textCharacters[["y"]]), vocList[["y"]])#
    vocList[["z"]] -> append(c(textCharacters[["z"]]), vocList[["z"]])#
}
#Loading and cleaning text file#
rawText <- GetFileContent("assets/jazyky/it.txt")#
textTokenized <- TokenizeText(rawText)#
#
#Main storage (list) that represents final object#
vocList <- list()#
#
#Mapping characters in a list#
vocList[["a"]] <- c()#
vocList[["b"]] <- c()#
vocList[["c"]] <- c()#
vocList[["d"]] <- c()#
vocList[["e"]] <- c()#
vocList[["f"]] <- c()#
vocList[["g"]] <- c()#
vocList[["h"]] <- c()#
vocList[["i"]] <- c()#
vocList[["j"]] <- c()#
vocList[["k"]] <- c()#
vocList[["l"]] <- c()#
vocList[["m"]] <- c()#
vocList[["n"]] <- c()#
vocList[["o"]] <- c()#
vocList[["p"]] <- c()#
vocList[["q"]] <- c()#
vocList[["r"]] <- c()#
vocList[["s"]] <- c()#
vocList[["t"]] <- c()#
vocList[["u"]] <- c()#
vocList[["v"]] <- c()#
vocList[["w"]] <- c()#
vocList[["x"]] <- c()#
vocList[["y"]] <- c()#
vocList[["z"]] <- c()#
#
#Looping: sample whole text and append characters into a mapped list#
#
for (i in 10){#
    #Sampling tokenized text file#
    textSampled <- sample(textTokenized, replace=TRUE)#
    #Dividing characters from sampled text into table#
    textCharacters <- TokenizeText(textSampled, "[abcdefgahijklmnopqrstuvwxyz]", regexIsMask=TRUE)#
    textCharacters <- table(textCharacters)#
    #Appending characters into mapped list#
    vocList[["a"]] <- append(c(textCharacters[["a"]]), vocList[["a"]])#
    vocList[["b"]] <- append(c(textCharacters[["b"]]), vocList[["b"]])#
    vocList[["c"]] <- append(c(textCharacters[["c"]]), vocList[["c"]])#
    vocList[["d"]] <- append(c(textCharacters[["d"]]), vocList[["d"]])#
    vocList[["e"]] <- append(c(textCharacters[["e"]]), vocList[["e"]])#
    vocList[["f"]] <- append(c(textCharacters[["f"]]), vocList[["f"]])#
    vocList[["g"]] <- append(c(textCharacters[["g"]]), vocList[["g"]])#
    vocList[["h"]] <- append(c(textCharacters[["h"]]), vocList[["h"]])#
    vocList[["i"]] <- append(c(textCharacters[["i"]]), vocList[["i"]])#
    vocList[["j"]] <- append(c(textCharacters[["j"]]), vocList[["j"]])#
    vocList[["k"]] <- append(c(textCharacters[["k"]]), vocList[["k"]])#
    vocList[["l"]] <- append(c(textCharacters[["l"]]), vocList[["l"]])#
    vocList[["m"]] <- append(c(textCharacters[["m"]]), vocList[["m"]])#
    vocList[["n"]] <- append(c(textCharacters[["n"]]), vocList[["n"]])#
    vocList[["o"]] <- append(c(textCharacters[["o"]]), vocList[["o"]])#
    vocList[["p"]] <- append(c(textCharacters[["p"]]), vocList[["p"]])#
    vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["r"]] <- append(c(textCharacters[["r"]]), vocList[["r"]])#
    vocList[["s"]] <- append(c(textCharacters[["s"]]), vocList[["s"]])#
    vocList[["t"]] <- append(c(textCharacters[["t"]]), vocList[["t"]])#
    vocList[["u"]] <- append(c(textCharacters[["u"]]), vocList[["u"]])#
    vocList[["v"]] <- append(c(textCharacters[["v"]]), vocList[["v"]])#
    vocList[["w"]] <- append(c(textCharacters[["w"]]), vocList[["w"]])#
    vocList[["q"]] <- append(c(textCharacters[["q"]]), vocList[["q"]])#
    vocList[["y"]] <- append(c(textCharacters[["y"]]), vocList[["y"]])#
    vocList[["z"]] <- append(c(textCharacters[["z"]]), vocList[["z"]])#
}
vocList
